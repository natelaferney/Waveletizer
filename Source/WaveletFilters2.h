//This file was machine generated
#include <vector>

void filtcoef(std::string filterChoice, std::vector<float> &flp, std::vector<float> &fhp, std::vector<float> &rlp, std::vector<float> &rhp)
{
	if ("Haard" == filterChoice) 
	{
		float flp_temp[] = {0.7071067811865476f,0.7071067811865476f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.7071067811865476f,0.7071067811865476f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.7071067811865476f,0.7071067811865476f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.7071067811865476f,-0.7071067811865476f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Mountain" == filterChoice) 
	{
		float flp_temp[] = {-0.12940952255126037f,0.2241438680420134f,0.8365163037378079f,0.48296291314453416f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.48296291314453416f,0.8365163037378079f,-0.2241438680420134f,-0.12940952255126037f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.48296291314453416f,0.8365163037378079f,0.2241438680420134f,-0.12940952255126037f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {-0.12940952255126037f,-0.2241438680420134f,0.8365163037378079f,-0.48296291314453416f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("SharpValleys" == filterChoice) 
	{
		float flp_temp[] = {0.03522629188570953f,-0.08544127388202666f,-0.13501102001025458f,0.45987750211849154f,0.8068915093110925f,0.33267055295008263f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.33267055295008263f,0.8068915093110925f,-0.45987750211849154f,-0.13501102001025458f,0.08544127388202666f,0.03522629188570953f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.33267055295008263f,0.8068915093110925f,0.45987750211849154f,-0.13501102001025458f,-0.08544127388202666f,0.03522629188570953f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.03522629188570953f,0.08544127388202666f,-0.13501102001025458f,-0.45987750211849154f,0.8068915093110925f,-0.33267055295008263f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("SmoothValleys1" == filterChoice) 
	{
		float flp_temp[] = {-0.010597401785069032f,0.0328830116668852f,0.030841381835560764f,-0.18703481171909309f,-0.027983769416859854f,0.6308807679298589f,0.7148465705529157f,0.2303778133088965f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.2303778133088965f,0.7148465705529157f,-0.6308807679298589f,-0.027983769416859854f,0.18703481171909309f,0.030841381835560764f,-0.0328830116668852f,-0.010597401785069032f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.2303778133088965f,0.7148465705529157f,0.6308807679298589f,-0.027983769416859854f,-0.18703481171909309f,0.030841381835560764f,0.0328830116668852f,-0.010597401785069032f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {-0.010597401785069032f,-0.0328830116668852f,0.030841381835560764f,0.18703481171909309f,-0.027983769416859854f,-0.6308807679298589f,0.7148465705529157f,-0.2303778133088965f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("SmoothValleys2" == filterChoice) 
	{
		float flp_temp[] = {0.0033357252854737712f,-0.012580751999081999f,-0.006241490212798274f,0.07757149384004572f,-0.032244869584638375f,-0.24229488706638203f,0.13842814590132074f,0.7243085284377729f,0.6038292697971896f,0.16010239797419293f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.16010239797419293f,0.6038292697971896f,-0.7243085284377729f,0.13842814590132074f,0.24229488706638203f,-0.032244869584638375f,-0.07757149384004572f,-0.006241490212798274f,0.012580751999081999f,0.0033357252854737712f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.16010239797419293f,0.6038292697971896f,0.7243085284377729f,0.13842814590132074f,-0.24229488706638203f,-0.032244869584638375f,0.07757149384004572f,-0.006241490212798274f,-0.012580751999081999f,0.0033357252854737712f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0033357252854737712f,0.012580751999081999f,-0.006241490212798274f,-0.07757149384004572f,-0.032244869584638375f,0.24229488706638203f,0.13842814590132074f,-0.7243085284377729f,0.6038292697971896f,-0.16010239797419293f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("SmoothValleys3" == filterChoice) 
	{
		float flp_temp[] = {-0.00011747678412476953f,0.0006754494064505693f,-0.00039174037337694705f,-0.004870352993451574f,0.008746094047405777f,0.013981027917398282f,-0.044088253930794755f,-0.017369301001807547f,0.12874742662047847f,0.0004724845739132828f,-0.2840155429615469f,-0.015829105256349306f,0.5853546836542067f,0.6756307362972898f,0.31287159091429995f,0.05441584224310401f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.05441584224310401f,0.31287159091429995f,-0.6756307362972898f,0.5853546836542067f,0.015829105256349306f,-0.2840155429615469f,-0.0004724845739132828f,0.12874742662047847f,0.017369301001807547f,-0.044088253930794755f,-0.013981027917398282f,0.008746094047405777f,0.004870352993451574f,-0.00039174037337694705f,-0.0006754494064505693f,-0.00011747678412476953f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.05441584224310401f,0.31287159091429995f,0.6756307362972898f,0.5853546836542067f,-0.015829105256349306f,-0.2840155429615469f,0.0004724845739132828f,0.12874742662047847f,-0.017369301001807547f,-0.044088253930794755f,0.013981027917398282f,0.008746094047405777f,-0.004870352993451574f,-0.00039174037337694705f,0.0006754494064505693f,-0.00011747678412476953f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {-0.00011747678412476953f,-0.0006754494064505693f,-0.00039174037337694705f,0.004870352993451574f,0.008746094047405777f,-0.013981027917398282f,-0.044088253930794755f,0.017369301001807547f,0.12874742662047847f,-0.0004724845739132828f,-0.2840155429615469f,0.015829105256349306f,0.5853546836542067f,-0.6756307362972898f,0.31287159091429995f,-0.05441584224310401f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Himalayas" == filterChoice) 
	{
		float flp_temp[] = {-1.3264202894521244e-05f,9.358867032006959e-05f,-0.00011646685512928545f,-0.0006858566949597116f,0.001992405295185056f,0.001395351747052901f,-0.010733175483330575f,0.0036065535669561697f,0.033212674059341f,-0.029457536821875813f,-0.07139414716639708f,0.09305736460357235f,0.12736934033579325f,-0.19594627437737705f,-0.24984642432731538f,0.2811723436605775f,0.6884590394536035f,0.5272011889317256f,0.1881768000776915f,0.026670057900555554f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.026670057900555554f,0.1881768000776915f,-0.5272011889317256f,0.6884590394536035f,-0.2811723436605775f,-0.24984642432731538f,0.19594627437737705f,0.12736934033579325f,-0.09305736460357235f,-0.07139414716639708f,0.029457536821875813f,0.033212674059341f,-0.0036065535669561697f,-0.010733175483330575f,-0.001395351747052901f,0.001992405295185056f,0.0006858566949597116f,-0.00011646685512928545f,-9.358867032006959e-05f,-1.3264202894521244e-05f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.026670057900555554f,0.1881768000776915f,0.5272011889317256f,0.6884590394536035f,0.2811723436605775f,-0.24984642432731538f,-0.19594627437737705f,0.12736934033579325f,0.09305736460357235f,-0.07139414716639708f,-0.029457536821875813f,0.033212674059341f,0.0036065535669561697f,-0.010733175483330575f,0.001395351747052901f,0.001992405295185056f,-0.0006858566949597116f,-0.00011646685512928545f,9.358867032006959e-05f,-1.3264202894521244e-05f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {-1.3264202894521244e-05f,-9.358867032006959e-05f,-0.00011646685512928545f,0.0006858566949597116f,0.001992405295185056f,-0.001395351747052901f,-0.010733175483330575f,-0.0036065535669561697f,0.033212674059341f,0.029457536821875813f,-0.07139414716639708f,-0.09305736460357235f,0.12736934033579325f,0.19594627437737705f,-0.24984642432731538f,-0.2811723436605775f,0.6884590394536035f,-0.5272011889317256f,0.1881768000776915f,-0.026670057900555554f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("EvenSym1" == filterChoice) 
	{
		float flp_temp[] = {-0.07576571478927333f,-0.02963552764599851f,0.49761866763201545f,0.8037387518059161f,0.29785779560527736f,-0.09921954357684722f,-0.012603967262037833f,0.0322231006040427f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.0322231006040427f,-0.012603967262037833f,0.09921954357684722f,0.29785779560527736f,-0.8037387518059161f,0.49761866763201545f,0.02963552764599851f,-0.07576571478927333f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.0322231006040427f,-0.012603967262037833f,-0.09921954357684722f,0.29785779560527736f,0.8037387518059161f,0.49761866763201545f,-0.02963552764599851f,-0.07576571478927333f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {-0.07576571478927333f,0.02963552764599851f,0.49761866763201545f,-0.8037387518059161f,0.29785779560527736f,0.09921954357684722f,-0.012603967262037833f,-0.0322231006040427f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("OddSym1" == filterChoice) 
	{
		float flp_temp[] = {0.027333068345077982f,0.029519490925774643f,-0.039134249302383094f,0.1993975339773936f,0.7234076904024206f,0.6339789634582119f,0.01660210576452232f,-0.17532808990845047f,-0.021101834024758855f,0.019538882735286728f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.019538882735286728f,-0.021101834024758855f,0.17532808990845047f,0.01660210576452232f,-0.6339789634582119f,0.7234076904024206f,-0.1993975339773936f,-0.039134249302383094f,-0.029519490925774643f,0.027333068345077982f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.019538882735286728f,-0.021101834024758855f,-0.17532808990845047f,0.01660210576452232f,0.6339789634582119f,0.7234076904024206f,0.1993975339773936f,-0.039134249302383094f,0.029519490925774643f,0.027333068345077982f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.027333068345077982f,-0.029519490925774643f,-0.039134249302383094f,-0.1993975339773936f,0.7234076904024206f,-0.6339789634582119f,0.01660210576452232f,0.17532808990845047f,-0.021101834024758855f,-0.019538882735286728f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("EvenSym2" == filterChoice) 
	{
		float flp_temp[] = {0.015404109327027373f,0.0034907120842174702f,-0.11799011114819057f,-0.048311742585633f,0.4910559419267466f,0.787641141030194f,0.3379294217276218f,-0.07263752278646252f,-0.021060292512300564f,0.04472490177066578f,0.0017677118642428036f,-0.007800708325034148f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {0.007800708325034148f,0.0017677118642428036f,-0.04472490177066578f,-0.021060292512300564f,0.07263752278646252f,0.3379294217276218f,-0.787641141030194f,0.4910559419267466f,0.048311742585633f,-0.11799011114819057f,-0.0034907120842174702f,0.015404109327027373f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {-0.007800708325034148f,0.0017677118642428036f,0.04472490177066578f,-0.021060292512300564f,-0.07263752278646252f,0.3379294217276218f,0.787641141030194f,0.4910559419267466f,-0.048311742585633f,-0.11799011114819057f,0.0034907120842174702f,0.015404109327027373f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.015404109327027373f,-0.0034907120842174702f,-0.11799011114819057f,0.048311742585633f,0.4910559419267466f,-0.787641141030194f,0.3379294217276218f,0.07263752278646252f,-0.021060292512300564f,-0.04472490177066578f,0.0017677118642428036f,0.007800708325034148f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("OddSym2" == filterChoice) 
	{
		float flp_temp[] = {0.002681814568257878f,-0.0010473848886829163f,-0.01263630340325193f,0.03051551316596357f,0.0678926935013727f,-0.049552834937127255f,0.017441255086855827f,0.5361019170917628f,0.767764317003164f,0.2886296317515146f,-0.14004724044296152f,-0.10780823770381774f,0.004010244871533663f,0.010268176708511255f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.010268176708511255f,0.004010244871533663f,0.10780823770381774f,-0.14004724044296152f,-0.2886296317515146f,0.767764317003164f,-0.5361019170917628f,0.017441255086855827f,0.049552834937127255f,0.0678926935013727f,-0.03051551316596357f,-0.01263630340325193f,0.0010473848886829163f,0.002681814568257878f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.010268176708511255f,0.004010244871533663f,-0.10780823770381774f,-0.14004724044296152f,0.2886296317515146f,0.767764317003164f,0.5361019170917628f,0.017441255086855827f,-0.049552834937127255f,0.0678926935013727f,0.03051551316596357f,-0.01263630340325193f,-0.0010473848886829163f,0.002681814568257878f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.002681814568257878f,0.0010473848886829163f,-0.01263630340325193f,-0.03051551316596357f,0.0678926935013727f,0.049552834937127255f,0.017441255086855827f,-0.5361019170917628f,0.767764317003164f,-0.2886296317515146f,-0.14004724044296152f,0.10780823770381774f,0.004010244871533663f,-0.010268176708511255f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("EvenSym3" == filterChoice) 
	{
		float flp_temp[] = {0.00011196719424656033f,-1.1353928041541452e-05f,-0.0013497557555715387f,0.00018021409008538188f,0.007414965517654251f,-0.0014089092443297553f,-0.024220722675013445f,0.0075537806116804775f,0.04917931829966084f,-0.03584883073695439f,-0.022162306170337816f,0.39888597239022f,0.7634790977836572f,0.46274103121927235f,-0.07833262231634322f,-0.17037069723886492f,0.01530174062247884f,0.05780417944550566f,-0.0026043910313322326f,-0.014589836449234145f,0.00030764779631059454f,0.002350297614183465f,-1.8158078862617515e-05f,-0.0001790665869750869f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {0.0001790665869750869f,-1.8158078862617515e-05f,-0.002350297614183465f,0.00030764779631059454f,0.014589836449234145f,-0.0026043910313322326f,-0.05780417944550566f,0.01530174062247884f,0.17037069723886492f,-0.07833262231634322f,-0.46274103121927235f,0.7634790977836572f,-0.39888597239022f,-0.022162306170337816f,0.03584883073695439f,0.04917931829966084f,-0.0075537806116804775f,-0.024220722675013445f,0.0014089092443297553f,0.007414965517654251f,-0.00018021409008538188f,-0.0013497557555715387f,1.1353928041541452e-05f,0.00011196719424656033f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {-0.0001790665869750869f,-1.8158078862617515e-05f,0.002350297614183465f,0.00030764779631059454f,-0.014589836449234145f,-0.0026043910313322326f,0.05780417944550566f,0.01530174062247884f,-0.17037069723886492f,-0.07833262231634322f,0.46274103121927235f,0.7634790977836572f,0.39888597239022f,-0.022162306170337816f,-0.03584883073695439f,0.04917931829966084f,0.0075537806116804775f,-0.024220722675013445f,-0.0014089092443297553f,0.007414965517654251f,0.00018021409008538188f,-0.0013497557555715387f,-1.1353928041541452e-05f,0.00011196719424656033f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.00011196719424656033f,1.1353928041541452e-05f,-0.0013497557555715387f,-0.00018021409008538188f,0.007414965517654251f,0.0014089092443297553f,-0.024220722675013445f,-0.0075537806116804775f,0.04917931829966084f,0.03584883073695439f,-0.022162306170337816f,-0.39888597239022f,0.7634790977836572f,-0.46274103121927235f,-0.07833262231634322f,0.17037069723886492f,0.01530174062247884f,-0.05780417944550566f,-0.0026043910313322326f,0.014589836449234145f,0.00030764779631059454f,-0.002350297614183465f,-1.8158078862617515e-05f,0.0001790665869750869f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("OddSym3" == filterChoice) 
	{
		float flp_temp[] = {9.712419737963348e-06f,-7.35966679891947e-06f,-0.00016066186637495343f,5.512254785558665e-05f,0.0010705672194623959f,-0.0002673164464718057f,-0.0035901654473726417f,0.003423450736351241f,0.01007997708790567f,-0.01940501143093447f,-0.03887671687683349f,0.021937642719753955f,0.04073547969681068f,-0.04108266663538248f,0.11153369514261872f,0.5786404152150345f,0.7218430296361812f,0.2439627054321663f,-0.1966263587662373f,-0.1340562984562539f,0.06839331006048024f,0.06796982904487918f,-0.008744788886477952f,-0.01717125278163873f,0.0015261382781819983f,0.003481028737064895f,-0.00010815440168545525f,-0.00040216853760293483f,2.171789015077892e-05f,2.866070852531808e-05f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-2.866070852531808e-05f,2.171789015077892e-05f,0.00040216853760293483f,-0.00010815440168545525f,-0.003481028737064895f,0.0015261382781819983f,0.01717125278163873f,-0.008744788886477952f,-0.06796982904487918f,0.06839331006048024f,0.1340562984562539f,-0.1966263587662373f,-0.2439627054321663f,0.7218430296361812f,-0.5786404152150345f,0.11153369514261872f,0.04108266663538248f,0.04073547969681068f,-0.021937642719753955f,-0.03887671687683349f,0.01940501143093447f,0.01007997708790567f,-0.003423450736351241f,-0.0035901654473726417f,0.0002673164464718057f,0.0010705672194623959f,-5.512254785558665e-05f,-0.00016066186637495343f,7.35966679891947e-06f,9.712419737963348e-06f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {2.866070852531808e-05f,2.171789015077892e-05f,-0.00040216853760293483f,-0.00010815440168545525f,0.003481028737064895f,0.0015261382781819983f,-0.01717125278163873f,-0.008744788886477952f,0.06796982904487918f,0.06839331006048024f,-0.1340562984562539f,-0.1966263587662373f,0.2439627054321663f,0.7218430296361812f,0.5786404152150345f,0.11153369514261872f,-0.04108266663538248f,0.04073547969681068f,0.021937642719753955f,-0.03887671687683349f,-0.01940501143093447f,0.01007997708790567f,0.003423450736351241f,-0.0035901654473726417f,-0.0002673164464718057f,0.0010705672194623959f,5.512254785558665e-05f,-0.00016066186637495343f,-7.35966679891947e-06f,9.712419737963348e-06f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {9.712419737963348e-06f,7.35966679891947e-06f,-0.00016066186637495343f,-5.512254785558665e-05f,0.0010705672194623959f,0.0002673164464718057f,-0.0035901654473726417f,-0.003423450736351241f,0.01007997708790567f,0.01940501143093447f,-0.03887671687683349f,-0.021937642719753955f,0.04073547969681068f,0.04108266663538248f,0.11153369514261872f,-0.5786404152150345f,0.7218430296361812f,-0.2439627054321663f,-0.1966263587662373f,0.1340562984562539f,0.06839331006048024f,-0.06796982904487918f,-0.008744788886477952f,0.01717125278163873f,0.0015261382781819983f,-0.003481028737064895f,-0.00010815440168545525f,0.00040216853760293483f,2.171789015077892e-05f,-2.866070852531808e-05f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Coif1" == filterChoice) 
	{
		float flp_temp[] = {-0.015655728135791993f,-0.07273261951252645f,0.3848648468648578f,0.8525720202116004f,0.3378976624574818f,-0.07273261951252645f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {0.07273261951252645f,0.3378976624574818f,-0.8525720202116004f,0.3848648468648578f,0.07273261951252645f,-0.015655728135791993f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {-0.07273261951252645f,0.3378976624574818f,0.8525720202116004f,0.3848648468648578f,-0.07273261951252645f,-0.015655728135791993f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {-0.015655728135791993f,0.07273261951252645f,0.3848648468648578f,-0.8525720202116004f,0.3378976624574818f,0.07273261951252645f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Coif2" == filterChoice) 
	{
		float flp_temp[] = {-0.000720549445520347f,-0.0018232088709110323f,0.005611434819368834f,0.02368017194684777f,-0.05943441864643109f,-0.07648859907828076f,0.4170051844232391f,0.8127236354494135f,0.3861100668227629f,-0.0673725547237256f,-0.04146493678687178f,0.01638733646320364f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.01638733646320364f,-0.04146493678687178f,0.0673725547237256f,0.3861100668227629f,-0.8127236354494135f,0.4170051844232391f,0.07648859907828076f,-0.05943441864643109f,-0.02368017194684777f,0.005611434819368834f,0.0018232088709110323f,-0.000720549445520347f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.01638733646320364f,-0.04146493678687178f,-0.0673725547237256f,0.3861100668227629f,0.8127236354494135f,0.4170051844232391f,-0.07648859907828076f,-0.05943441864643109f,0.02368017194684777f,0.005611434819368834f,-0.0018232088709110323f,-0.000720549445520347f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {-0.000720549445520347f,0.0018232088709110323f,0.005611434819368834f,-0.02368017194684777f,-0.05943441864643109f,0.07648859907828076f,0.4170051844232391f,-0.8127236354494135f,0.3861100668227629f,0.0673725547237256f,-0.04146493678687178f,-0.01638733646320364f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Coif3" == filterChoice) 
	{
		float flp_temp[] = {-3.459977319727278e-05f,-7.0983302506379e-05f,0.0004662169598204029f,0.0011175187708306303f,-0.0025745176881367972f,-0.009007976136730624f,0.015880544863669452f,0.03455502757329774f,-0.08230192710629983f,-0.07179982161915484f,0.42848347637737f,0.7937772226260872f,0.40517690240911824f,-0.06112339000297255f,-0.06577191128146936f,0.023452696142077168f,0.007782596425672746f,-0.003793512864380802f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {0.003793512864380802f,0.007782596425672746f,-0.023452696142077168f,-0.06577191128146936f,0.06112339000297255f,0.40517690240911824f,-0.7937772226260872f,0.42848347637737f,0.07179982161915484f,-0.08230192710629983f,-0.03455502757329774f,0.015880544863669452f,0.009007976136730624f,-0.0025745176881367972f,-0.0011175187708306303f,0.0004662169598204029f,7.0983302506379e-05f,-3.459977319727278e-05f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {-0.003793512864380802f,0.007782596425672746f,0.023452696142077168f,-0.06577191128146936f,-0.06112339000297255f,0.40517690240911824f,0.7937772226260872f,0.42848347637737f,-0.07179982161915484f,-0.08230192710629983f,0.03455502757329774f,0.015880544863669452f,-0.009007976136730624f,-0.0025745176881367972f,0.0011175187708306303f,0.0004662169598204029f,-7.0983302506379e-05f,-3.459977319727278e-05f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {-3.459977319727278e-05f,7.0983302506379e-05f,0.0004662169598204029f,-0.0011175187708306303f,-0.0025745176881367972f,0.009007976136730624f,0.015880544863669452f,-0.03455502757329774f,-0.08230192710629983f,0.07179982161915484f,0.42848347637737f,-0.7937772226260872f,0.40517690240911824f,0.06112339000297255f,-0.06577191128146936f,-0.023452696142077168f,0.007782596425672746f,0.003793512864380802f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}

	else if ("Lumps1" == filterChoice) 
	{
		float flp_temp[] = {-0.08838834764831845f,0.08838834764831845f,0.7071067811865476f,0.7071067811865476f,0.08838834764831845f,-0.08838834764831845f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.0f,0.0f,-0.7071067811865476f,0.7071067811865476f,-0.0f,0.0f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.0f,0.0f,0.7071067811865476f,0.7071067811865476f,0.0f,0.0f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {-0.08838834764831845f,-0.08838834764831845f,0.7071067811865476f,-0.7071067811865476f,0.08838834764831845f,0.08838834764831845f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Lumps2" == filterChoice) 
	{
		float flp_temp[] = {0.016572815184059706f,-0.016572815184059706f,-0.12153397801643785f,0.12153397801643785f,0.7071067811865476f,0.7071067811865476f,0.12153397801643785f,-0.12153397801643785f,-0.016572815184059706f,0.016572815184059706f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.0f,0.0f,-0.0f,0.0f,-0.7071067811865476f,0.7071067811865476f,-0.0f,0.0f,-0.0f,0.0f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.0f,0.0f,0.0f,0.0f,0.7071067811865476f,0.7071067811865476f,0.0f,0.0f,0.0f,0.0f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.016572815184059706f,0.016572815184059706f,-0.12153397801643785f,-0.12153397801643785f,0.7071067811865476f,-0.7071067811865476f,0.12153397801643785f,0.12153397801643785f,-0.016572815184059706f,-0.016572815184059706f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Ridges1" == filterChoice) 
	{
		float flp_temp[] = {0.0f,-0.1767766952966369f,0.3535533905932738f,1.0606601717798212f,0.3535533905932738f,-0.1767766952966369f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.0f,0.3535533905932738f,-0.7071067811865476f,0.3535533905932738f,-0.0f,0.0f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.0f,0.3535533905932738f,0.7071067811865476f,0.3535533905932738f,0.0f,0.0f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0f,0.1767766952966369f,0.3535533905932738f,-1.0606601717798212f,0.3535533905932738f,0.1767766952966369f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Ridges2" == filterChoice) 
	{
		float flp_temp[] = {0.0f,0.03314563036811941f,-0.06629126073623882f,-0.1767766952966369f,0.4198446513295126f,0.9943689110435825f,0.4198446513295126f,-0.1767766952966369f,-0.06629126073623882f,0.03314563036811941f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.0f,0.0f,-0.0f,0.3535533905932738f,-0.7071067811865476f,0.3535533905932738f,-0.0f,0.0f,-0.0f,0.0f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.0f,0.0f,0.0f,0.3535533905932738f,0.7071067811865476f,0.3535533905932738f,0.0f,0.0f,0.0f,0.0f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0f,-0.03314563036811941f,-0.06629126073623882f,0.1767766952966369f,0.4198446513295126f,-0.9943689110435825f,0.4198446513295126f,0.1767766952966369f,-0.06629126073623882f,-0.03314563036811941f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Ridges3" == filterChoice) 
	{
		float flp_temp[] = {0.0f,0.0015105430506304422f,-0.0030210861012608843f,-0.012947511862546647f,0.02891610982635418f,0.05299848189069094f,-0.13491307360773605f,-0.16382918343409023f,0.46257144047591653f,0.9516421218971786f,0.46257144047591653f,-0.16382918343409023f,-0.13491307360773605f,0.05299848189069094f,0.02891610982635418f,-0.012947511862546647f,-0.0030210861012608843f,0.0015105430506304422f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.0f,0.0f,-0.0f,0.0f,-0.0f,0.0f,-0.0f,0.3535533905932738f,-0.7071067811865476f,0.3535533905932738f,-0.0f,0.0f,-0.0f,0.0f,-0.0f,0.0f,-0.0f,0.0f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.3535533905932738f,0.7071067811865476f,0.3535533905932738f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0f,-0.0015105430506304422f,-0.0030210861012608843f,0.012947511862546647f,0.02891610982635418f,-0.05299848189069094f,-0.13491307360773605f,0.16382918343409023f,0.46257144047591653f,-0.9516421218971786f,0.46257144047591653f,0.16382918343409023f,-0.13491307360773605f,-0.05299848189069094f,0.02891610982635418f,0.012947511862546647f,-0.0030210861012608843f,-0.0015105430506304422f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("NailBat" == filterChoice) 
	{
		float flp_temp[] = {-0.3535533905932738f,1.0606601717798212f,1.0606601717798212f,-0.3535533905932738f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.1767766952966369f,0.5303300858899106f,-0.5303300858899106f,0.1767766952966369f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.1767766952966369f,0.5303300858899106f,0.5303300858899106f,0.1767766952966369f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {-0.3535533905932738f,-1.0606601717798212f,1.0606601717798212f,0.3535533905932738f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Sep1" == filterChoice) 
	{
		float flp_temp[] = {0.06629126073623882f,-0.1988737822087165f,-0.15467960838455727f,0.9943689110435825f,0.9943689110435825f,-0.15467960838455727f,-0.1988737822087165f,0.06629126073623882f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.0f,0.0f,-0.1767766952966369f,0.5303300858899106f,-0.5303300858899106f,0.1767766952966369f,-0.0f,0.0f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.0f,0.0f,0.1767766952966369f,0.5303300858899106f,0.5303300858899106f,0.1767766952966369f,0.0f,0.0f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.06629126073623882f,0.1988737822087165f,-0.15467960838455727f,-0.9943689110435825f,0.9943689110435825f,0.15467960838455727f,-0.1988737822087165f,-0.06629126073623882f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Sep2" == filterChoice) 
	{
		float flp_temp[] = {-0.013810679320049757f,0.04143203796014927f,0.052480581416189075f,-0.26792717880896527f,-0.07181553246425873f,0.966747552403483f,0.966747552403483f,-0.07181553246425873f,-0.26792717880896527f,0.052480581416189075f,0.04143203796014927f,-0.013810679320049757f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.0f,0.0f,-0.0f,0.0f,-0.1767766952966369f,0.5303300858899106f,-0.5303300858899106f,0.1767766952966369f,-0.0f,0.0f,-0.0f,0.0f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.0f,0.0f,0.0f,0.0f,0.1767766952966369f,0.5303300858899106f,0.5303300858899106f,0.1767766952966369f,0.0f,0.0f,0.0f,0.0f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {-0.013810679320049757f,-0.04143203796014927f,0.052480581416189075f,0.26792717880896527f,-0.07181553246425873f,-0.966747552403483f,0.966747552403483f,0.07181553246425873f,-0.26792717880896527f,-0.052480581416189075f,0.04143203796014927f,0.013810679320049757f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Sep3" == filterChoice) 
	{
		float flp_temp[] = {0.0030210861012608843f,-0.009063258303782653f,-0.01683176542131064f,0.074663985074019f,0.03133297870736289f,-0.301159125922835f,-0.02649924094534547f,0.9516421218971786f,0.9516421218971786f,-0.02649924094534547f,-0.301159125922835f,0.03133297870736289f,0.074663985074019f,-0.01683176542131064f,-0.009063258303782653f,0.0030210861012608843f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.0f,0.0f,-0.0f,0.0f,-0.0f,0.0f,-0.1767766952966369f,0.5303300858899106f,-0.5303300858899106f,0.1767766952966369f,-0.0f,0.0f,-0.0f,0.0f,-0.0f,0.0f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.1767766952966369f,0.5303300858899106f,0.5303300858899106f,0.1767766952966369f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0030210861012608843f,0.009063258303782653f,-0.01683176542131064f,-0.074663985074019f,0.03133297870736289f,0.301159125922835f,-0.02649924094534547f,-0.9516421218971786f,0.9516421218971786f,0.02649924094534547f,-0.301159125922835f,-0.03133297870736289f,0.074663985074019f,0.01683176542131064f,-0.009063258303782653f,-0.0030210861012608843f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Spike1" == filterChoice) 
	{
		float flp_temp[] = {0.0f,0.0f,0.03968708834740544f,0.007948108637240322f,-0.05446378846823691f,0.34560528195603346f,0.7366601814282105f,0.34560528195603346f,-0.05446378846823691f,0.007948108637240322f,0.03968708834740544f,0.0f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.013456709459118716f,-0.002694966880111507f,0.13670658466432914f,-0.09350469740093886f,-0.47680326579848425f,0.8995061097486484f,-0.47680326579848425f,-0.09350469740093886f,0.13670658466432914f,-0.002694966880111507f,-0.013456709459118716f,0.0f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.013456709459118716f,-0.002694966880111507f,-0.13670658466432914f,-0.09350469740093886f,0.47680326579848425f,0.8995061097486484f,0.47680326579848425f,-0.09350469740093886f,-0.13670658466432914f,-0.002694966880111507f,0.013456709459118716f,0.0f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0f,-0.0f,0.03968708834740544f,-0.007948108637240322f,-0.05446378846823691f,-0.34560528195603346f,0.7366601814282105f,-0.34560528195603346f,-0.05446378846823691f,-0.007948108637240322f,0.03968708834740544f,-0.0f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Spike2" == filterChoice) 
	{
		float flp_temp[] = {0.0f,0.0019088317364812906f,-0.0019142861290887667f,-0.016990639867602342f,0.01193456527972926f,0.04973290349094079f,-0.07726317316720414f,-0.09405920349573646f,0.4207962846098268f,0.8259229974584023f,0.4207962846098268f,-0.09405920349573646f,-0.07726317316720414f,0.04973290349094079f,0.01193456527972926f,-0.016990639867602342f,-0.0019142861290887667f,0.0019088317364812906f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.0f,0.0f,-0.0f,0.014426282505624435f,-0.014467504896790148f,-0.07872200106262882f,0.04036797903033992f,0.41784910915027457f,-0.7589077294536541f,0.41784910915027457f,0.04036797903033992f,-0.07872200106262882f,-0.014467504896790148f,0.014426282505624435f,-0.0f,0.0f,-0.0f,0.0f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.0f,0.0f,0.0f,0.014426282505624435f,0.014467504896790148f,-0.07872200106262882f,-0.04036797903033992f,0.41784910915027457f,0.7589077294536541f,0.41784910915027457f,-0.04036797903033992f,-0.07872200106262882f,0.014467504896790148f,0.014426282505624435f,0.0f,0.0f,0.0f,0.0f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0f,-0.0019088317364812906f,-0.0019142861290887667f,0.016990639867602342f,0.01193456527972926f,-0.04973290349094079f,-0.07726317316720414f,0.09405920349573646f,0.4207962846098268f,-0.8259229974584023f,0.4207962846098268f,0.09405920349573646f,-0.07726317316720414f,-0.04973290349094079f,0.01193456527972926f,0.016990639867602342f,-0.0019142861290887667f,-0.0019088317364812906f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Stairs1" == filterChoice) 
	{
		float flp_temp[] = {0.0f,0.0f,0.7071067811865476f,0.7071067811865476f,0.0f,0.0f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {0.08838834764831845f,0.08838834764831845f,-0.7071067811865476f,0.7071067811865476f,-0.08838834764831845f,-0.08838834764831845f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {-0.08838834764831845f,0.08838834764831845f,0.7071067811865476f,0.7071067811865476f,0.08838834764831845f,-0.08838834764831845f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0f,-0.0f,0.7071067811865476f,-0.7071067811865476f,0.0f,-0.0f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Stairs2" == filterChoice) 
	{
		float flp_temp[] = {0.0f,0.0f,0.0f,0.0f,0.7071067811865476f,0.7071067811865476f,0.0f,0.0f,0.0f,0.0f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.016572815184059706f,-0.016572815184059706f,0.12153397801643785f,0.12153397801643785f,-0.7071067811865476f,0.7071067811865476f,-0.12153397801643785f,-0.12153397801643785f,0.016572815184059706f,0.016572815184059706f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.016572815184059706f,-0.016572815184059706f,-0.12153397801643785f,0.12153397801643785f,0.7071067811865476f,0.7071067811865476f,0.12153397801643785f,-0.12153397801643785f,-0.016572815184059706f,0.016572815184059706f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0f,-0.0f,0.0f,-0.0f,0.7071067811865476f,-0.7071067811865476f,0.0f,-0.0f,0.0f,-0.0f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Spike3" == filterChoice) 
	{
		float flp_temp[] = {0.0f,0.0f,0.3535533905932738f,0.7071067811865476f,0.3535533905932738f,0.0f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {0.1767766952966369f,0.3535533905932738f,-1.0606601717798212f,0.3535533905932738f,0.1767766952966369f,0.0f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {-0.1767766952966369f,0.3535533905932738f,1.0606601717798212f,0.3535533905932738f,-0.1767766952966369f,0.0f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0f,-0.0f,0.3535533905932738f,-0.7071067811865476f,0.3535533905932738f,-0.0f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Gaussian1" == filterChoice) 
	{
		float flp_temp[] = {0.0f,0.0f,0.1767766952966369f,0.5303300858899106f,0.5303300858899106f,0.1767766952966369f,0.0f,0.0f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {-0.06629126073623882f,-0.1988737822087165f,0.15467960838455727f,0.9943689110435825f,-0.9943689110435825f,-0.15467960838455727f,0.1988737822087165f,0.06629126073623882f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {0.06629126073623882f,-0.1988737822087165f,-0.15467960838455727f,0.9943689110435825f,0.9943689110435825f,-0.15467960838455727f,-0.1988737822087165f,0.06629126073623882f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0f,-0.0f,0.1767766952966369f,-0.5303300858899106f,0.5303300858899106f,-0.1767766952966369f,0.0f,-0.0f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Gaussian2" == filterChoice) 
	{
		float flp_temp[] = {0.0f,0.0f,0.0f,0.0f,0.1767766952966369f,0.5303300858899106f,0.5303300858899106f,0.1767766952966369f,0.0f,0.0f,0.0f,0.0f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {0.013810679320049757f,0.04143203796014927f,-0.052480581416189075f,-0.26792717880896527f,0.07181553246425873f,0.966747552403483f,-0.966747552403483f,-0.07181553246425873f,0.26792717880896527f,0.052480581416189075f,-0.04143203796014927f,-0.013810679320049757f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {-0.013810679320049757f,0.04143203796014927f,0.052480581416189075f,-0.26792717880896527f,-0.07181553246425873f,0.966747552403483f,0.966747552403483f,-0.07181553246425873f,-0.26792717880896527f,0.052480581416189075f,0.04143203796014927f,-0.013810679320049757f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0f,-0.0f,0.0f,-0.0f,0.1767766952966369f,-0.5303300858899106f,0.5303300858899106f,-0.1767766952966369f,0.0f,-0.0f,0.0f,-0.0f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else if ("Gaussian3" == filterChoice) 
	{
		float flp_temp[] = {0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.1767766952966369f,0.5303300858899106f,0.5303300858899106f,0.1767766952966369f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f};
		flp.assign(flp_temp, flp_temp + sizeof( flp_temp) / sizeof(float));
		float fhp_temp[] = {0.0006797443727836989f,0.002039233118351097f,-0.005060319219611981f,-0.020618912641105536f,0.014112787930175844f,0.09913478249423216f,-0.012300136269419315f,-0.32019196836077857f,-0.0020500227115698858f,0.9421257006782068f,-0.9421257006782068f,0.0020500227115698858f,0.32019196836077857f,0.012300136269419315f,-0.09913478249423216f,-0.014112787930175844f,0.020618912641105536f,0.005060319219611981f,-0.002039233118351097f,-0.0006797443727836989f};
		fhp.assign(fhp_temp, fhp_temp + sizeof( fhp_temp) / sizeof(float));
		float rlp_temp[] = {-0.0006797443727836989f,0.002039233118351097f,0.005060319219611981f,-0.020618912641105536f,-0.014112787930175844f,0.09913478249423216f,0.012300136269419315f,-0.32019196836077857f,0.0020500227115698858f,0.9421257006782068f,0.9421257006782068f,0.0020500227115698858f,-0.32019196836077857f,0.012300136269419315f,0.09913478249423216f,-0.014112787930175844f,-0.020618912641105536f,0.005060319219611981f,0.002039233118351097f,-0.0006797443727836989f};
		rlp.assign(rlp_temp, rlp_temp + sizeof( rlp_temp) / sizeof(float));
		float rhp_temp[] = {0.0f,-0.0f,0.0f,-0.0f,0.0f,-0.0f,0.0f,-0.0f,0.1767766952966369f,-0.5303300858899106f,0.5303300858899106f,-0.1767766952966369f,0.0f,-0.0f,0.0f,-0.0f,0.0f,-0.0f,0.0f,-0.0f};
		rhp.assign(rhp_temp, rhp_temp + sizeof( rhp_temp) / sizeof(float));
	}
	else {}
}